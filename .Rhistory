y$X.3 <- as.character(y$X.3)
y$X.3 <- gsub(",", "", y$X.3, fixed="TRUE")
y$X.3
mean(y$X.3, na.rm=TRUE)
mean(y$X.3, na.rm=TRUE)
mean(as.numeric(y$X.3), na.rm=TRUE)
c <- y$X.3
c
c <- as.numeric(c)
c
mean(c, na.rm=TRUE)
summary(c)
head(y)
a <- read.csv(text = x, skip = 4, nrows = 190, stringsAsFactors = FALSE)
head(a)
tail(a)
a$X.4 <- as.character(a$X.4)
mean(a$X.4, na.rm=TRUE)
a$X.4 <- as.numeric(a$X.4)
head(a)
tail(a)
a$X.4
a <- read.csv(text = x, skip = 4, nrows = 190, stringsAsFactors = FALSE)
a$X.4 <- as.character(a$X.4)
a$X.4 <- gsub(",", "", a$X.4, fixed="TRUE")
head(a)
b <- a
mean(a$X.4, na.rm=TRUE)
a$X.4 <- as.numeric(a$X.4)
head(a)
mean(a$X.4, na.rm=TRUE)
grep("^United",X.3), 3
grep("^United","X.3"), 3
grep("^United",a$X.3), 3
head(a)
a$X.3
grep("^United",a$X.3), 3
grep("*United",a$X.3), 5
grep("United$",a$X.3), 3
grep("^United",a$X.3), 4
grep("^United",a$X.3)
grep("*United",a$X.3)
grep("*United$",a$X.3)
grep("^United",a$X.3),3
x <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
gdp <- read.csv(text = x)
x <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
ed <- read.csv(text = x)
head(ed)
head(gdp)
tail
tail(gdp)
head(a)
gdp <- a
head(ed)
names(ed)
head(ed)
head(gdp)
x <- merge(gdp, ed, by.x= c("X"), by.y=c("CountryCode",), all=TRUE)
x <- merge(gdp, ed, by.x= c("X"), by.y=c("CountryCode"), all=TRUE)
head(x)
nrow(ed)
nrow(gdp)
nrow(x)
names(x)
head(a)
tail(a)
a
head(ed)
mean(a$X.4, na.rm=TRUE)
head(ed)
names(x)
grep("june", x$Special.Notes)
grep("june", x$National.accounts.base.year)
grep("June", x$National.accounts.base.year)
head(x)
grep("June", x$Latest.household.survey)
grep("june", x$Latest.household.survey)
grep("march", x$Latest.household.survey)
grep("March", x$Latest.household.survey)
grep("March", x$Latest.household.survey, value=TRUE)
x$Latest.household.survey
x$Special.Notes
grep("March", x$Special.Notes, value=TRUE)
grep("June", x$Special.Notes, value=TRUE)
grep("june", x$Special.Notes, value=TRUE)
grep("06", x$Special.Notes, value=TRUE)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages(quantmod)
install.packages("quantmod"")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head amzn
head(amzn)
names(amzn)
head(sampleTimes)
names(sampleTime)
names(sampleTimes)
class(amzn)
nrow(sampletimes)
nrow(sampleTimes)
d <- sampleTimes
d
nrow(d)
grep("2012", d, value=TRUE)
class(d)
e <- d
e <- weekdays(e)
e
e <- d
e <- grep("2012", d, value=TRUE)
e
e <- weekdays(e)
e <- as.Date(e)
e <- weekdays(e)
e
grep("Monday", e, value=TRUE)
act.mon.dat <- read.csv("activity.csv")
setwd("~/Documents/DataScience/ReproducableResearch/Project1/RepData_PeerAssessment1")
act.mon.dat <- read.csv("activity.csv")
head(act.mon.dat)
act.mon.dat <- read.csv("activity.csv", colClasses = "character",na.strings = "Not Available")
head(act.mon.dat)
tail(act.mon.dat)
view("activity.csv")
View(act.mon.dat)
str(act.mon.dat)
x <- read.csv("activity.csv", na.strings = "Not Available")
str(x)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from interval to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
##str(act.mon.dat)
str(act.mon.dat)
with(act.mon.dat, hist(steps,
main = "Global Active Power",
col = "red",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"))
with(act.mon.dat, hist(date,
main = "Global Active Power",
col = "red",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"))
with(act.mon.dat, hist(steps, breaks = date,
main = "Global Active Power",
col = "red",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"))
library("ggplot2")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
geom_bar(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Year of Emissions Recorded (fips = 24510)") +
ylab("PM2.5 emitted (tons)") +
ggtitle("Total Emissions from PM2.5 by source for Baltimore City") +
labs(fill="Source Type")
qplot(steps, data=act.mon.dat, geom="histogram")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps), geom="histogram") +
## geom_bar(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Year of Emissions Recorded (fips = 24510)") +
ylab("PM2.5 emitted (tons)") +
ggtitle("Total Emissions from PM2.5 by source for Baltimore City") +
labs(fill="Source Type")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Year of Emissions Recorded (fips = 24510)") +
ylab("PM2.5 emitted (tons)") +
ggtitle("Total Emissions from PM2.5 by source for Baltimore City") +
labs(fill="Source Type")
act.mon.dat$date <- as.Date(act.mon.dat$date, format = "%YYYY-%mm-%dd")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Year of Emissions Recorded (fips = 24510)") +
ylab("PM2.5 emitted (tons)") +
ggtitle("Total Emissions from PM2.5 by source for Baltimore City") +
labs(fill="Source Type")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Year of Emissions Recorded (fips = 24510)") +
ylab("PM2.5 emitted (tons)") +
ggtitle("Total Emissions from PM2.5 by source for Baltimore City") +
labs(fill="Source Type")
str(act.man.dat)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from interval to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
act.mon.dat$date <- as.Date(act.mon.dat$date, format = "%YYYY-%mm-%dd")
library("ggplot2")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Year of Emissions Recorded (fips = 24510)") +
ylab("PM2.5 emitted (tons)") +
ggtitle("Total Emissions from PM2.5 by source for Baltimore City") +
labs(fill="Source Type")
str(act.mon.dat)
with(act.mon.dat, hist(date,
main = "Global Active Power",
col = "red",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"))
with(act.mon.dat, hist(steps, breaks = date,
main = "Global Active Power",
col = "red",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"))
View(act.mon.dat)
View(act.mon.dat)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from interval to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
x <- act.mon.dat
x$date <- as.Date(x.$date, format = "%Y-%m-%d")
str(x)
x$date <- as.date(x.$date, format = "%Y-%m-%d")
x$date <- as.Date(x.$date)
x$date <- as.date(x$date, format = "%Y-%m-%d")
x$date <- as.Date(x$date, format = "%Y-%m-%d")
View(x)
View(x)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from interval to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
act.mon.dat$date <- as.Date(act.mon.dat$date, format = "%Y-%m-%d")
View(act.mon.dat)
View(act.mon.dat)
library("ggplot2")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Year of Emissions Recorded (fips = 24510)") +
ylab("PM2.5 emitted (tons)") +
ggtitle("Total Emissions from PM2.5 by source for Baltimore City") +
labs(fill="Source Type")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
##geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
geom_histogram(aes(fill=act.mon.dat$date),stat="identity") +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day") +
labs(fill="Source Type")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
##geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
geom_histogram(aes(fill=act.mon.dat$date)) +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day") +
labs(fill="Source Type")
ggplot(data=act.mon.dat, aes(x=act.mon.dat$date, y=act.mon.dat$steps)) +
geom_histogram(aes(fill=act.mon.dat$date),stat="identity", position="dodge") +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day")
##labs(fill="Source Type")
View(act.mon.dat)
View(act.mon.dat)
sapply(x)
summary(act.mon.dat)
plotdata <- tapply(act.mon.dat$steps, act.mon.dat$date, FUN = sum)
plotdata
summary(plotdata)
str(plotdata)
names(plotdata)
hist(plotdata)
with(plotdata, hist(Global_active_power,
main = "Global Active Power",
col = "red",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"))
x <- apply(act.mon.dat$steps, act.mon.dat$date, FUN = sum)
aggregate(steps ~ date, act.mon.dat, sum)
act.mon.sum <- aggregate(steps ~ date, act.mon.dat, sum)
ggplot(data=act.mon.sum, aes(x=act.mon.sum$date, y=act.mon.sum$steps)) +
geom_histogram(aes(fill=act.mon.sum$date),stat="identity", position="dodge") +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day")
##labs(fill="Source Type")
aggregate(steps ~ date, act.mon.dat, sum)
act.mon.sum <- aggregate(steps ~ date, act.mon.dat, sum)
ggplot(data=act.mon.sum, aes(x=act.mon.sum$date, y=act.mon.sum$steps)) +
geom_histogram(aes(fill=act.mon.sum$date),stat="identity") +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day")
##labs(fill="Source Type")
act.mon.sum <- aggregate(steps ~ date, act.mon.dat, sum)
ggplot(data=act.mon.sum, aes(x=act.mon.sum$date, y=act.mon.sum$steps)) +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day")
##labs(fill="Source Type")
act.mon.sum <- aggregate(steps ~ date, act.mon.dat, sum)
ggplot(data=act.mon.sum, aes(x=act.mon.sum$date, y=act.mon.sum$steps)) +
geom_histogram(stat="identity") +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day")
##labs(fill="Source Type")
library("xtable")
##Summarize mean and median steps by day
##act.mon.mean <- aggregate(steps ~ date, act.mon.dat, sum)
xt <- xtable(summary(act.mon.dat))
print(xt, type = "html")
install.packages("xtable")
library("xtable")
##Summarize mean and median steps by day
##act.mon.mean <- aggregate(steps ~ date, act.mon.dat, sum)
xt <- xtable(summary(act.mon.dat))
print(xt, type = "html")
sapply(act.mon.dat)
sapply(act.mon.dat, mean)
sapply(act.mon.dat, act.mon.dat$steps, mean)
ddply(act.mon.dat,~date,summarise,mean=mean(steps),sd=sd(steps))
library("plyr")
ddply(act.mon.dat,~date,summarise,mean=mean(steps),sd=sd(steps))
ddply(act.mon.dat,~date,summarise,mean=mean(steps),median=median(steps))
ddply(act.mon.sum,~date,summarise,mean=mean(steps),median=median(steps))
head(act.mon.sum)
summary(act.mon.sum)
ddply(act.mon.sum,summarise,mean=mean(steps),median=median(steps))
summary(act.mon.sum)
mean(act.mon.sum)
mean(act.mon.sum$steps)
median(act.mon.sum$steps)
l <- list(mean = mean(act.mon.sum$steps, median = median(act.mon.sum$steps))
df <- dataframe(mean = mean(act.mon.sum$steps), median = median(act.mon.sum$steps))
head(df)
df <- data.frame(mean = mean(act.mon.sum$steps), median = median(act.mon.sum$steps))
head(df)
df
data.frame(mean = mean(act.mon.sum$steps), median = median(act.mon.sum$steps))
act.mon.int <- aggregate(steps ~ interval, act.mon.dat, sum)
act.mon.int
act.mon.int <- aggregate(steps ~ interval, act.mon.dat, sum)
ggplot(data=act.mon.int, aes(x=act.mon.int$interval, y=act.mon.int$steps)) +
geom_line(stat="identity") +
xlab("5 minute periods starting at 12:00 am") +
ylab("Steps Taken") +
ggtitle("Average steps taken by 5 minute period")
View(act.mon.dat)
View(act.mon.dat)
colSums(is.na(act.mon.dat$steps))
colSums(is.na(act.mon.dat))
x <- colSums(is.na(act.mon.dat))
x
x$steps
[[x$steps]]
x[[steps]]
x[[,steps]]
x[,steps]
x[,1]
x[1,]
x[1,steps]
x[,1]
x <- colSums(is.na(act.mon.dat))
x
class(x)
class(man.mon.dat)
class(act.mon.dat)
x[1]
df <- data.frame(MissingValues = colSums(is.na(act.mon.dat$steps)), TotalValues = nrows(act.mon.dat$steps))
xt <- xtable(df)
print(xt, type="html")
df <- data.frame(MissingValues = colSums(is.na(act.mon.dat$steps)), TotalValues = nrows(act.mon.dat$steps))
colSums(is.na(act.mon.dat$steps))
x <- colSums(is.na(act.mon.dat))
x[1]
mv <- colSums(is.na(act.mon.dat$steps))
df <- data.frame(MissingValues = mv[1]), TotalValues = nrows(act.mon.dat$steps))
df <- data.frame(MissingValues = mv[1], TotalValues = nrows(act.mon.dat$steps))
nrows(df)
mv <- colSums(is.na(act.mon.dat))
df <- data.frame(MissingValues = mv[1], TotalValues = nrow(act.mon.dat$steps))
xt <- xtable(df)
print(xt, type="html")
mv <- colSums(is.na(act.mon.dat))
df <- data.frame(MissingValues = mv[1], TotalValues = nrow(act.mon.dat$steps))
df <- data.frame(MissingValues = mv[1], TotalValues = nrow(act.mon.dat$steps))
df <- data.frame(MissingValues = 2000, TotalValues = 20000)
nrow(act.mon.dat$steps)
nrow(act.mon.dat)
View(act.mon.int)
View(act.mon.int)
x <- act.mon.act
x <- act.mon.dat
i <- act.mon.int
x$steps[is.na(x$steps)] <- i$steps[match(x$interval,i$interval)]
x$steps[is.na(x$steps)] <- apply(x, 3, lookup, i)
library(qdap)
install.packages("qdap")
library(qdap)
x$steps[is.na(x$steps)] <- apply(x, 3, lookup, i)
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=steps)
View(x)
View(x)
View(y)
View(y)
View(i)
View(i)
nrows(x)
nrow(x)
act.mon.dat$steps[is.na(act.mon.dat$steps)] <-
subset(act.mon.int$steps, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
act.mon.dat$steps[is.na(act.mon.dat$steps)] <-
subset(act.mon.int$steps, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
act.mon.dat$steps[is.na(act.mon.dat$steps)] <- +
subset(act.mon.int$steps, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
act.mon.dat$steps[is.na(act.mon.dat$steps)] <- +
subset(act.mon.int$steps, +
act.mon.dat$interval %in% act.mon.int$interval, select=steps)
nrow(i)
nrow(act.mon.int)
nrow(act.mon.dat)
nrow(x)
act.mon.dat$steps[is.na(act.mon.dat$steps)] <- subset(act.mon.int$steps, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=steps)
x <- act.mon.dat
i <- act.mon.int
##act.mon.dat$steps[is.na(act.mon.dat$steps)] <- subset(act.mon.int$steps, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=steps)
act.mon.dat <- x
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=steps)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from char to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
##set the date from factor to date
act.mon.dat$date <- as.Date(act.mon.dat$date, format = "%Y-%m-%d")
##str(act.mon.dat)
x <- act.mon.dat
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=steps)
act.mon.dat <- x
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=steps)
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=i$steps)
View(i)
View(i)
str(i)
str(x)
View(x)
View(x)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from char to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
##set the date from factor to date
act.mon.dat$date <- as.Date(act.mon.dat$date, format = "%Y-%m-%d")
str(act.man.dat)
str(act.mon.dat)
x$steps[is.na(x$steps)] <- subset(i$steps, x$interval %in% i$interval, select=steps)
x$steps[is.na(, "steps")] <- subset(i$steps, x$interval %in% i$interval, select=steps)
x[is.na(x$steps), "steps"] <- subset(i$steps, x$interval %in% i$interval, select=steps)
x$steps[is.na(, "steps")] <- subset(i$steps, x$interval %in% i$interval, select = steps)
x$steps[is.na(x$steps)] <- subset(i, x$interval %in% i$interval, select=steps)
View(x)
View(x)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from char to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
##set the date from factor to date
act.mon.dat$date <- as.Date(act.mon.dat$date, format = "%Y-%m-%d")
act.mon.dat$steps[is.na(act.mon.dat$steps)] <- subset(act.mon.int$steps, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
act.mon.dat$steps[is.na(act.mon.dat$steps)] <- subset(act.mon.int, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
View(act.mon.dat)
View(act.mon.dat)
View(act.mon.dat)
View(act.mon.dat)
## Create a Time Series Plot of 5 minutes intervals averages over period
## Required Libraries
library("ggplot2")
##Calculate and report the total number of missing values in the dataset
##(i.e. the total number of rows with NAs)
##calculate sum of all columns with missing values, 1st col is steps
mv <- colSums(is.na(act.mon.dat))
##display in table to be a little cleaner looking in report
df <- data.frame(MissingValues = mv[1], TotalValues = nrow(act.mon.dat))
xt <- xtable(df)
print(xt, type="html")
##Replace missing 5 minute intervals with mean for that
##interval accross sample
act.mon.dat$steps[is.na(act.mon.dat$steps)] <- subset(act.mon.int, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
##Summarize steps by day with missing values replaced
act.mon.sum <- aggregate(steps ~ date, act.mon.dat, sum)
ggplot(data=act.mon.sum, aes(x=act.mon.sum$date, y=act.mon.sum$steps)) +
geom_histogram(stat="identity", position="dodge") +
xlab("Date of Monitor reading") +
ylab("Steps Taken") +
ggtitle("Average steps taken by day")
act.mon.sum <- aggregate(steps ~ date, act.mon.dat, sum)
str(act.mon.dat)
y <- aggregate(steps ~ date, act.mon.dat, sum)
str(act.mon.dat)
x <- act.mon.dat
str(x)
x$steps <- as.numeric(x$steps)
act.mon.dat <- read.csv("activity.csv", na.strings = "Not Available")
##set the steps from char to integer
act.mon.dat$steps <- as.numeric(levels(act.mon.dat$steps))[act.mon.dat$steps]
##set the date from factor to date
act.mon.dat$date <- as.Date(act.mon.dat$date, format = "%Y-%m-%d")
##str(act.mon.dat)
x <- act.mon.dat
str(x)
act.mon.dat$steps[is.na(act.mon.dat$steps),] <- subset(act.mon.int, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
act.mon.dat[is.na(act.mon.dat$steps), "steps"] <- subset(act.mon.int, act.mon.dat$interval %in% act.mon.int$interval, select=steps)
str(act.mon.dat)
view(act.mon.dat)
View(act.mon.dat)
View(act.mon.dat)
View(act.mon.int)
View(act.mon.int)
summary(act.mon.dat)
